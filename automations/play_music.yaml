alias: Play music
description: ""
triggers:
  - trigger: conversation
    command:
      - Play {requested_music} [on {player}]
conditions: []
actions:
  - action: script.extract_media_player
    metadata: {}
    response_variable: mediaplayer
    data:
      triggering_device_id: "{{trigger.user_input.device_id}}"
  - if:
      - condition: template
        value_template: "{{trigger.slots.requested_music == \"music\"}}"
    then:
      - action: music_assistant.search
        metadata: {}
        data:
          limit: 5
          library_only: true
          config_entry_id: 01JJSN13BVSDYJR92JVXZZE3GK
          media_type:
            - playlist
          name: Liked Music
        response_variable: music_result
      - action: music_assistant.play_media
        metadata: {}
        data:
          media_id: "{{ music_result.playlists[0].uri }}"
        target:
          entity_id: "{{ mediaplayer.mediaplayer }}"
      - action: media_player.shuffle_set
        metadata: {}
        data:
          shuffle: true
        target:
          entity_id: "{{ mediaplayer.mediaplayer }}"
    else:
      - action: tts.speak
        metadata: {}
        data:
          cache: false
          message: Searching for {{ trigger.slots.requested_music}}
          media_player_entity_id: "{{ mediaplayer.mediaplayer }}"
        target:
          entity_id:
            - tts.home_assistant_cloud
      - action: music_assistant.search
        metadata: {}
        data:
          limit: 5
          library_only: false
          config_entry_id: 01JJSN13BVSDYJR92JVXZZE3GK
          name: "{{ trigger.slots.requested_music }}"
        response_variable: music_result
      - action: music_assistant.play_media
        metadata: {}
        data:
          media_id: "{{ music_result.tracks[0].uri }}"
        target:
          entity_id: "{{ mediaplayer.mediaplayer }}"
mode: restart
